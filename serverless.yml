service: payment-manager

provider:
  name: aws
  runtime: nodejs20.x
  region: ap-south-1
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:PutItem
          Resource: 
            - arn:aws:dynamodb:${self:provider.region}:*:table/Payments

functions:
  SQSPaymentsHandler:
    handler: src/deliveries/index.handleSqsPayments
    environment:
      discount: 5
    events:
      - sqs:
          arn: !GetAtt PaymentsQueue.Arn
          batchSize: 10
          functionResponseType: ReportBatchItemFailures
    package:
      include:
        - node_modules/aws-sdk/**

resources:
  Resources:
    PaymentsBucket:
      Type: "AWS::S3::Bucket"
      Properties:
        BucketName: payments-${sls:instanceId}

    PaymentsQueue:
      Type: AWS::SQS::Queue
      Properties:
        FifoQueue: true
        QueueName: payments.fifo
        DelaySeconds: 0
        MessageRetentionPeriod: 86400 # 1 Day
        ContentBasedDeduplication: false
        RedrivePolicy:
          deadLetterTargetArn: !GetAtt PaymentsQueueDeadLetterQueue.Arn
          maxReceiveCount: 5

    PaymentsQueueDeadLetterQueue:
      Type: AWS::SQS::Queue
      Properties:
        FifoQueue: true
        QueueName: payments-dlq.fifo
        DelaySeconds: 0
        MessageRetentionPeriod: 345600 # 4 Days

    PaymentsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Payments
        AttributeDefinitions:
          - AttributeName: PaymentId
            AttributeType: S
        KeySchema:
          - AttributeName: PaymentId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
